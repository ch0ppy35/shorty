# serverless.yml
# Uh Change this name..Rmeove -dev...
service: serverless-shorty-dev

plugins:
    - serverless-python-individually

provider:
    name: aws
    runtime: python3.7
    stage: ${opt:stage, 'dev'}
    region: ${opt:region, 'us-west-2'}
    stackTags:
        billingproject: ${self:service}
    logRetentionInDays: 7
    environment:
        BASE_URL: https://shorty.mikemiller.tech/
    iamRoleStatements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            Fn::GetAtt:
                - RecordsTable
                - Arn

package:
    individually: True
    exclude:
        - '**/*'

functions:
    pull:
        handler: shorty-pull/handler.lambda_handler
        memorySize: 128
        package:
            include:
                - shorty-pull/**
        events:
            - http: 
                method: get
                path: u/{short_url_id}
                cors: true
    create:
        handler: shorty-add/handler.lambda_handler
        memorySize: 128
        package:
            include:
                - shorty-add/**
        events:
            - http: 
                method: post 
                path: u/create
                cors: true

resources:
    Resources:
        RecordsTable:
            Type: 'AWS::DynamoDB::Table'
            Properties:
                TimeToLiveSpecification:
                    AttributeName: time_to_live
                    Enabled: true
                AttributeDefinitions:
                -
                    AttributeName: short_url_id
                    AttributeType: S
                KeySchema:
                -
                    AttributeName: short_url_id
                    KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                TableName: ${self:custom.tableName}
        FrontEndBucket:
            Type: AWS::S3::Bucket
            Properties:
                AccessControl: PublicRead
                BucketName: ${opt:bucketname}
                WebsiteConfiguration:
                    IndexDocument: index.html
                    ErrorDocument: index.html
        FrontEndS3BucketPolicy:
            Type: AWS::S3::BucketPolicy
            Properties:
                Bucket:
                    Ref: FrontEndBucket
                PolicyDocument:
                    Statement:
                        - Sid: PublicReadGetObject
                          Effect: Allow
                          Principal: "*"
                          Action:
                          - s3:GetObject
                          Resource:
                            Fn::Join: [
                            "", [
                                "arn:aws:s3:::",
                                {
                                "Ref": "FrontEndBucket"
                                },
                                "/*"
                                ]
                            ]


custom:
    tableName: shorty-table
    pyIndividually:
      wrap:pull: shorty-pull/handler.shorty-pull
      wrap:create: shorty-add/handler.shorty-add
